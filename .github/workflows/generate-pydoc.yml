# .github/workflows/generate-pydoc.yml
name: Projecte Django – Oriol Torra

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Clona el repositori
        uses: actions/checkout@v3

      - name: Configura Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Instal·la Django
        run: |
          python -m pip install --upgrade pip
          pip install Django

      - name: Aplica migracions i executa tests
        run: |
          python manage.py migrate
          python manage.py test

      - name: Genera documentació amb Pydoc
        env:
          DJANGO_SETTINGS_MODULE: my_site.settings
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python - <<'EOF'
import os, django, pydoc

# 1) Carrega Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'my_site.settings')
django.setup()

# 2) Crea carpeta 'docs'
base = os.getcwd()
docs_dir = os.path.join(base, 'docs')
os.makedirs(docs_dir, exist_ok=True)

# 3) Genera un .html per cada .py
for root, dirs, files in os.walk(base):
    if 'venv' in root or 'migrations' in root:
        continue
    for fname in files:
        if not fname.endswith('.py'):
            continue
        path = os.path.join(root, fname)
        module = path[len(base)+1:-3].replace(os.sep, '.')
        print(f"Generant doc per {module}")
        try:
            pydoc.writedoc(module)
        except Exception as e:
            print(f"⚠️ Error amb {module}: {e}")

# 4) Mou tots els HTML generats a docs/
for f in os.listdir(base):
    if f.endswith('.html'):
        os.replace(os.path.join(base, f), os.path.join(docs_dir, f))

# 5) Escriu un index.html navegable
idx = os.path.join(docs_dir, 'index.html')
with open(idx, 'w', encoding='utf-8') as f:
    f.write("""<!DOCTYPE html>
<html lang="ca">
<head>
  <meta charset="UTF-8">
  <title>Documentació Pydoc</title>
  <style>
    body { font-family: sans-serif; padding: 2rem; }
    ul { list-style: none; padding: 0; }
    li { margin: .5rem 0; }
    a { text-decoration: none; color: #0366d6; }
    a:hover { text-decoration: underline; }
  </style>
</head>
<body>
  <h1>📚 Documentació Pydoc</h1>
  <ul>
""")
    for html in sorted(os.listdir(docs_dir)):
        if html == 'index.html':
            continue
        f.write(f'    <li><a href="{html}">{html}</a></li>\n')
    f.write("""  </ul>
</body>
</html>""")
EOF

      - name: Publica a GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: docs

      - name: Actualitza README.md amb enllaç
        run: |
          LINK="[📚 Documentació Pydoc](https://OriolTorraTudela.github.io/Projecte-Final_Django/)"
          if ! grep -q "Documentació Pydoc" README.md; then
            echo -e "\n$LINK" >> README.md
            git config --global user.name "github-actions"
            git config --global user.email "github-actions@github.com"
            git add README.md
            git commit -m "Afegit enllaç a la documentació Pydoc"
            git push origin main
          fi
